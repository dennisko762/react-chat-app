{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Dennis\\\\Desktop\\\\React Builds\\\\React Chat App\\\\chat\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport \"./Chat.css\";\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    //fetching the information from the link to get room and name\n    //using destructured parameters\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //line above is equivalent to const name=queryString.parse(location.search).name\n    //                                       queryString.parse(location.search).room\n\n    console.log(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room); //emit is an event send to all clients\n    //operation: join, some payload, a callback that we passed in the index.js\n\n    socket.emit(\"join\", {\n      name,\n      room\n    }, () => {}); //unmounting \n\n    return () => {\n      socket.emit(\"disconnect\");\n      console.log(\"we cleaned up \");\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Chat Page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Chat, \"GIO88hoTIbd8cQ46bO4eHvdsLDA=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Dennis/Desktop/React Builds/React Chat App/chat/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","ENDPOINT","parse","search","console","log","emit","off"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAS,YAAT;AAGA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAMW,QAAQ,GAAC,gBAAf;AAEJV,EAAAA,SAAS,CAAC,MAAI;AACV;AACA;AACC,UAAM;AAACM,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAYP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAlB,CAHS,CAKV;AACA;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACO,MAArB;AACAT,IAAAA,MAAM,GAACD,EAAE,CAACQ,QAAD,CAAT;AAEDH,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP,CAZW,CAcV;AACA;;AACDL,IAAAA,MAAM,CAACY,IAAP,CAAY,MAAZ,EAAmB;AAACT,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAA+B,MAAI,CAElC,CAFD,EAhBW,CAmBX;;AACA,WAAM,MAAI;AACNL,MAAAA,MAAM,CAACY,IAAP,CAAY,YAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACCX,MAAAA,MAAM,CAACa,GAAP;AAEJ,KALD;AAMF,GA1BQ,EA0BP,CAACN,QAAD,EAAUL,QAAQ,CAACO,MAAnB,CA1BO,CAAT;AA6BI,sBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAKH,CAvCD;;GAAMR,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nimport queryString from \"query-string\"\r\nimport io from \"socket.io-client\"\r\nimport   \"./Chat.css\"\r\n\r\n\r\nlet socket;\r\n\r\nconst Chat=({location})=>{\r\n    const [name,setName]=useState(\"\");\r\n    const [room,setRoom]=useState(\"\");\r\n    const ENDPOINT=\"localhost:5000\"\r\n\r\nuseEffect(()=>{\r\n    //fetching the information from the link to get room and name\r\n    //using destructured parameters\r\n     const {name,room}=queryString.parse(location.search)\r\n    \r\n    //line above is equivalent to const name=queryString.parse(location.search).name\r\n    //                                       queryString.parse(location.search).room\r\n\r\n    console.log(location.search)\r\n    socket=io(ENDPOINT)\r\n\r\n   setName(name)\r\n   setRoom(room)\r\n\r\n    //emit is an event send to all clients\r\n    //operation: join, some payload, a callback that we passed in the index.js\r\n   socket.emit(\"join\",{name,room},()=>{\r\n    \r\n   })\r\n   //unmounting \r\n   return()=>{\r\n       socket.emit(\"disconnect\");\r\n       console.log(\"we cleaned up \")\r\n        socket.off()\r\n\r\n   }\r\n},[ENDPOINT,location.search])\r\n\r\n\r\n    return(\r\n<h1>Chat Page</h1>\r\n\r\n\r\n    )\r\n}\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}